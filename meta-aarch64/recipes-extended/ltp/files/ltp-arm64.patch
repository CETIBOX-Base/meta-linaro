---
 testcases/kernel/syscalls/profil/profil01.c |    2 ++
 testcases/kernel/syscalls/sysctl/sysctl01.c |    4 ++++
 testcases/kernel/syscalls/sysctl/sysctl03.c |    4 ++++
 testcases/kernel/syscalls/sysctl/sysctl04.c |    4 ++++
 testcases/kernel/syscalls/sysctl/sysctl05.c |    4 ++++
 5 files changed, 18 insertions(+)

--- a/testcases/kernel/syscalls/profil/profil01.c
+++ b/testcases/kernel/syscalls/profil/profil01.c
@@ -58,6 +58,8 @@ char *TCID = "profil01";
 
 #ifdef __arm__
 #define ADDRESS_OFFSET 0x8000
+#elif defined(__aarch64__)
+#define ADDRESS_OFFSET 0x400000
 #else
 #define ADDRESS_OFFSET 0
 #endif
--- a/testcases/kernel/syscalls/sysctl/sysctl01.c
+++ b/testcases/kernel/syscalls/sysctl/sysctl01.c
@@ -62,9 +62,13 @@ int TST_TOTAL = 3;
 static int sysctl(int *name, int nlen, void *oldval, size_t * oldlenp,
 		  void *newval, size_t newlen)
 {
+#ifdef __NR__sysctl
 	struct __sysctl_args args =
 	    { name, nlen, oldval, oldlenp, newval, newlen };
 	return syscall(__NR__sysctl, &args);
+#else
+	return -ENOSYS;
+#endif
 }
 
 #define SIZE(x) sizeof(x)/sizeof(x[0])
--- a/testcases/kernel/syscalls/sysctl/sysctl03.c
+++ b/testcases/kernel/syscalls/sysctl/sysctl03.c
@@ -82,9 +82,13 @@ int TST_TOTAL = 2;
 int sysctl(int *name, int nlen, void *oldval, size_t * oldlenp,
 	   void *newval, size_t newlen)
 {
+#ifdef __NR__sysctl
 	struct __sysctl_args args =
 	    { name, nlen, oldval, oldlenp, newval, newlen };
 	return syscall(__NR__sysctl, &args);
+#else
+	return -ENOSYS;
+#endif
 }
 
 #define SIZE(x) sizeof(x)/sizeof(x[0])
--- a/testcases/kernel/syscalls/sysctl/sysctl04.c
+++ b/testcases/kernel/syscalls/sysctl/sysctl04.c
@@ -63,9 +63,13 @@ int TST_TOTAL = 2;
 int sysctl(int *name, int nlen, void *oldval, size_t * oldlenp,
 	   void *newval, size_t newlen)
 {
+#ifdef __NR__sysctl
 	struct __sysctl_args args =
 	    { name, nlen, oldval, oldlenp, newval, newlen };
 	return syscall(__NR__sysctl, &args);
+#else
+	return -ENOSYS;
+#endif
 }
 
 #define SIZE(x) sizeof(x)/sizeof(x[0])
--- a/testcases/kernel/syscalls/sysctl/sysctl05.c
+++ b/testcases/kernel/syscalls/sysctl/sysctl05.c
@@ -65,9 +65,13 @@ int TST_TOTAL = 2;
 int sysctl(int *name, int nlen, void *oldval, size_t * oldlenp,
 	   void *newval, size_t newlen)
 {
+#ifdef __NR__sysctl
 	struct __sysctl_args args =
 	    { name, nlen, oldval, oldlenp, newval, newlen };
 	return syscall(__NR__sysctl, &args);
+#else
+	return -ENOSYS;
+#endif
 }
 
 #define SIZE(x) sizeof(x)/sizeof(x[0])
